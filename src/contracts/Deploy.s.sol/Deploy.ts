/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../common";

export interface DeployInterface extends utils.Interface {
  functions: {
    "IS_SCRIPT()": FunctionFragment;
    "borrowAndStake()": FunctionFragment;
    "cardTBA()": FunctionFragment;
    "config()": FunctionFragment;
    "connexusCard()": FunctionFragment;
    "contractsToDeploy(uint256)": FunctionFragment;
    "erc6551Registry()": FunctionFragment;
    "management()": FunctionFragment;
    "managementImplementation()": FunctionFragment;
    "managementUUPS()": FunctionFragment;
    "realTokenizado()": FunctionFragment;
    "run()": FunctionFragment;
    "rwaCar()": FunctionFragment;
    "rwaRealstate()": FunctionFragment;
    "signer()": FunctionFragment;
    "token()": FunctionFragment;
    "utilityConnexus()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "IS_SCRIPT"
      | "borrowAndStake"
      | "cardTBA"
      | "config"
      | "connexusCard"
      | "contractsToDeploy"
      | "erc6551Registry"
      | "management"
      | "managementImplementation"
      | "managementUUPS"
      | "realTokenizado"
      | "run"
      | "rwaCar"
      | "rwaRealstate"
      | "signer"
      | "token"
      | "utilityConnexus"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "IS_SCRIPT", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "borrowAndStake",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "cardTBA", values?: undefined): string;
  encodeFunctionData(functionFragment: "config", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "connexusCard",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "contractsToDeploy",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "erc6551Registry",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "management",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "managementImplementation",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "managementUUPS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "realTokenizado",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "run", values?: undefined): string;
  encodeFunctionData(functionFragment: "rwaCar", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "rwaRealstate",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "signer", values?: undefined): string;
  encodeFunctionData(functionFragment: "token", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "utilityConnexus",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "IS_SCRIPT", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "borrowAndStake",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "cardTBA", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "config", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "connexusCard",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "contractsToDeploy",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "erc6551Registry",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "management", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "managementImplementation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "managementUUPS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "realTokenizado",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "run", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "rwaCar", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "rwaRealstate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "signer", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "token", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "utilityConnexus",
    data: BytesLike
  ): Result;

  events: {};
}

export interface Deploy extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: DeployInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    IS_SCRIPT(overrides?: CallOverrides): Promise<[boolean]>;

    borrowAndStake(overrides?: CallOverrides): Promise<[string]>;

    cardTBA(overrides?: CallOverrides): Promise<[string]>;

    config(overrides?: CallOverrides): Promise<[string]>;

    connexusCard(overrides?: CallOverrides): Promise<[string]>;

    contractsToDeploy(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    erc6551Registry(overrides?: CallOverrides): Promise<[string]>;

    management(overrides?: CallOverrides): Promise<[string]>;

    managementImplementation(overrides?: CallOverrides): Promise<[string]>;

    managementUUPS(overrides?: CallOverrides): Promise<[string]>;

    realTokenizado(overrides?: CallOverrides): Promise<[string]>;

    run(
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    rwaCar(overrides?: CallOverrides): Promise<[string]>;

    rwaRealstate(overrides?: CallOverrides): Promise<[string]>;

    signer(overrides?: CallOverrides): Promise<[string]>;

    token(overrides?: CallOverrides): Promise<[string]>;

    utilityConnexus(overrides?: CallOverrides): Promise<[string]>;
  };

  IS_SCRIPT(overrides?: CallOverrides): Promise<boolean>;

  borrowAndStake(overrides?: CallOverrides): Promise<string>;

  cardTBA(overrides?: CallOverrides): Promise<string>;

  config(overrides?: CallOverrides): Promise<string>;

  connexusCard(overrides?: CallOverrides): Promise<string>;

  contractsToDeploy(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  erc6551Registry(overrides?: CallOverrides): Promise<string>;

  management(overrides?: CallOverrides): Promise<string>;

  managementImplementation(overrides?: CallOverrides): Promise<string>;

  managementUUPS(overrides?: CallOverrides): Promise<string>;

  realTokenizado(overrides?: CallOverrides): Promise<string>;

  run(overrides?: Overrides & { from?: string }): Promise<ContractTransaction>;

  rwaCar(overrides?: CallOverrides): Promise<string>;

  rwaRealstate(overrides?: CallOverrides): Promise<string>;

  token(overrides?: CallOverrides): Promise<string>;

  utilityConnexus(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    IS_SCRIPT(overrides?: CallOverrides): Promise<boolean>;

    borrowAndStake(overrides?: CallOverrides): Promise<string>;

    cardTBA(overrides?: CallOverrides): Promise<string>;

    config(overrides?: CallOverrides): Promise<string>;

    connexusCard(overrides?: CallOverrides): Promise<string>;

    contractsToDeploy(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    erc6551Registry(overrides?: CallOverrides): Promise<string>;

    management(overrides?: CallOverrides): Promise<string>;

    managementImplementation(overrides?: CallOverrides): Promise<string>;

    managementUUPS(overrides?: CallOverrides): Promise<string>;

    realTokenizado(overrides?: CallOverrides): Promise<string>;

    run(overrides?: CallOverrides): Promise<void>;

    rwaCar(overrides?: CallOverrides): Promise<string>;

    rwaRealstate(overrides?: CallOverrides): Promise<string>;

    signer(overrides?: CallOverrides): Promise<string>;

    token(overrides?: CallOverrides): Promise<string>;

    utilityConnexus(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    IS_SCRIPT(overrides?: CallOverrides): Promise<BigNumber>;

    borrowAndStake(overrides?: CallOverrides): Promise<BigNumber>;

    cardTBA(overrides?: CallOverrides): Promise<BigNumber>;

    config(overrides?: CallOverrides): Promise<BigNumber>;

    connexusCard(overrides?: CallOverrides): Promise<BigNumber>;

    contractsToDeploy(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    erc6551Registry(overrides?: CallOverrides): Promise<BigNumber>;

    management(overrides?: CallOverrides): Promise<BigNumber>;

    managementImplementation(overrides?: CallOverrides): Promise<BigNumber>;

    managementUUPS(overrides?: CallOverrides): Promise<BigNumber>;

    realTokenizado(overrides?: CallOverrides): Promise<BigNumber>;

    run(overrides?: Overrides & { from?: string }): Promise<BigNumber>;

    rwaCar(overrides?: CallOverrides): Promise<BigNumber>;

    rwaRealstate(overrides?: CallOverrides): Promise<BigNumber>;

    signer(overrides?: CallOverrides): Promise<BigNumber>;

    token(overrides?: CallOverrides): Promise<BigNumber>;

    utilityConnexus(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    IS_SCRIPT(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    borrowAndStake(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    cardTBA(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    config(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    connexusCard(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    contractsToDeploy(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    erc6551Registry(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    management(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    managementImplementation(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    managementUUPS(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    realTokenizado(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    run(
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    rwaCar(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    rwaRealstate(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    signer(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    token(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    utilityConnexus(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
