/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BorrowAndStake,
  BorrowAndStakeInterface,
} from "../BorrowAndStake";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "RWArealState",
        type: "address",
      },
      {
        internalType: "address",
        name: "_RWAcar",
        type: "address",
      },
      {
        internalType: "address",
        name: "drex",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BorrowAndStake__CallerNotERC6551Owner",
    type: "error",
  },
  {
    inputs: [],
    name: "BorrowAndStake__NothingStakedByCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "CAR_BORROW_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "HIGH_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MEDIUM_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAY_TIME",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REAL_STATE_BORROW_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RWAcar",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RWArealS",
    outputs: [
      {
        internalType: "contract IERC1155",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum BorrowAndStake.ValueBorrowed",
        name: "_value",
        type: "uint8",
      },
      {
        internalType: "address payable",
        name: "_tba",
        type: "address",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "borrows",
    outputs: [
      {
        internalType: "uint256",
        name: "amountBorrowed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowedTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tba",
        type: "address",
      },
    ],
    name: "getStake",
    outputs: [
      {
        components: [
          {
            internalType: "enum BorrowAndStake.Asset",
            name: "asset",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct BorrowAndStake.Stake",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_tba",
        type: "address",
      },
    ],
    name: "payBorrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_tba",
        type: "address",
      },
    ],
    name: "stakeCar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_tba",
        type: "address",
      },
    ],
    name: "stakeRealState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "enum BorrowAndStake.Asset",
        name: "asset",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakingTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_tba",
        type: "address",
      },
    ],
    name: "unstakeCar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_tba",
        type: "address",
      },
    ],
    name: "unstakeRealState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200150b3803806200150b833981016040819052620000349162000094565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169382169390931790925560028054919093169116179055620000de565b80516001600160a01b03811681146200008f57600080fd5b919050565b600080600060608486031215620000aa57600080fd5b620000b58462000077565b9250620000c56020850162000077565b9150620000d56040850162000077565b90509250925092565b61141d80620000ee6000396000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c80637275764d116100e3578063aaf5eb681161008c578063f1fed30111610066578063f1fed30114610408578063f23a6e6114610410578063fed31bf81461044957600080fd5b8063aaf5eb68146103bc578063bc197c81146103c5578063c370944f1461040057600080fd5b8063913a19cc116100bd578063913a19cc14610395578063992c15fc1461039f578063a3bd6355146103a957600080fd5b80637275764d1461034f5780637a76646014610362578063873a2b5c1461038257600080fd5b80632c488fd711610145578063583d42fd1161011f578063583d42fd146103095780636d5428ee146103295780636ed1cda01461033c57600080fd5b80632c488fd7146102975780633234e5d7146102ac57806354a5706f146102bf57600080fd5b8063150b7a0211610176578063150b7a02146101d057806316934fc414610221578063260bbda51461026c57600080fd5b806301ffc9a7146101925780630279b9c9146101ba575b600080fd5b6101a56101a0366004610f5e565b610453565b60405190151581526020015b60405180910390f35b6101c2609681565b6040519081526020016101b1565b6102086101de366004610ff0565b7f150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f95945050505050565b6040516001600160e01b031990911681526020016101b1565b61025c61022f366004611063565b6003602081905260009182526040909120805460018201546002830154929093015460ff90911692919084565b6040516101b194939291906110b8565b60005461027f906001600160a01b031681565b6040516001600160a01b0390911681526020016101b1565b6102aa6102a53660046110e1565b610497565b005b60015461027f906001600160a01b031681565b6102ee6102cd366004611063565b60056020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060016101b1565b6101c2610317366004611063565b60046020526000908152604090205481565b6102aa610337366004611063565b610632565b6102aa61034a366004611063565b6107cf565b6102aa61035d36600461111a565b6108cc565b610375610370366004611063565b610af2565b6040516101b19190611157565b6102aa61039036600461118e565b610b92565b6101c2624c4b4081565b6101c26207a12081565b6102aa6103b7366004611063565b610d12565b6101c261271081565b6102086103d33660046111f8565b7fbc197c819b3e337a6f9652dd10becd7eef83032af3b9d958d3d42f669414662198975050505050505050565b6101c2603c81565b6101c2606481565b61020861041e3660046112b7565b7ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf979695505050505050565b6101c2622625a081565b60007f150b7a02000000000000000000000000000000000000000000000000000000006001600160e01b031983161480610491575061049182610ef7565b92915050565b336001600160a01b0316816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105039190611333565b6001600160a01b03161461052a5760405163cef8442d60e01b815260040160405180910390fd5b6040805160808101909152806001815260208082018690526040808301869052426060909301929092526001600160a01b038416600090815260039091522081518154829060ff19166001838181111561058657610586611080565b0217905550602082015160018201556040808301516002830155606090920151600390910155600080549151637921219560e11b81526001600160a01b038481166004830152306024830152604482018790526064820186905260a0608483015260a482019290925291169063f242432a9060c401600060405180830381600087803b15801561061557600080fd5b505af1158015610629573d6000803e3d6000fd5b50505050505050565b336001600160a01b0316816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561067a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069e9190611333565b6001600160a01b0316146106c55760405163cef8442d60e01b815260040160405180910390fd5b600180546001600160a01b0383811660008181526003602052604090819020909401549351632142170760e11b81523060048201526024810191909152604481019390935216906342842e0e906064015b600060405180830381600087803b15801561073057600080fd5b505af1158015610744573d6000803e3d6000fd5b5050506001600160a01b0382166000908152600360208190526040909120015461076f915042611366565b6001600160a01b03821660009081526004602052604081208054909190610797908490611379565b90915550506001600160a01b031660009081526003602081905260408220805460ff1916815560018101839055600281018390550155565b336001600160a01b0316816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610817573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083b9190611333565b6001600160a01b0316146108625760405163cef8442d60e01b815260040160405180910390fd5b600080546001600160a01b038381168084526003602052604080852060018101546002909101549151637921219560e11b815230600482015260248101939093526044830152606482015260a0608482015260a4810193909352169063f242432a9060c401610716565b336001600160a01b0316816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610914573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109389190611333565b6001600160a01b03161461095f5760405163cef8442d60e01b815260040160405180910390fd5b60008083600281111561097457610974611080565b0361098357506207a1206109ac565b600183600281111561099757610997611080565b036109a65750622625a06109ac565b50624c4b405b60006109b783610af2565b905080606001516000036109f7576040517fc8aa20da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008082516001811115610a0d57610a0d611080565b14610a19576064610a1c565b60965b604080516060810182528581526020808201848152428385019081526001600160a01b038a81166000818152600590955293869020945185559151600185015551600293840155915492517fa9059cbb000000000000000000000000000000000000000000000000000000008152600481019190915260248101879052929350169063a9059cbb906044016020604051808303816000875af1158015610ac6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aea919061138c565b505050505050565b610b1e604080516080810190915280600081526020016000815260200160008152602001600081525090565b6001600160a01b038216600090815260036020526040908190208151608081019092528054829060ff166001811115610b5957610b59611080565b6001811115610b6a57610b6a611080565b8152600182015460208201526002820154604082015260039091015460609091015292915050565b336001600160a01b0316816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfe9190611333565b6001600160a01b031614610c255760405163cef8442d60e01b815260040160405180910390fd5b604080516080810182526000808252602080830186905260018385018190524260608501526001600160a01b0386168352600390915292902081518154929391929091839160ff1916908381811115610c8057610c80611080565b021790555060208201516001828101919091556040808401516002840155606090930151600390920191909155549051632142170760e11b81526001600160a01b03838116600483015230602483015260448201859052909116906342842e0e90606401600060405180830381600087803b158015610cfe57600080fd5b505af1158015610aea573d6000803e3d6000fd5b336001600160a01b0316816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7e9190611333565b6001600160a01b031614610da55760405163cef8442d60e01b815260040160405180910390fd5b6001600160a01b038116600090815260056020908152604080832081516060810183528154815260018201549381019390935260020154908201819052909190603c90610df29042611366565b610dfc91906113ae565b90506000612710828460200151610e1391906113d0565b610e1f90612710611379565b8451610e2b91906113d0565b610e3591906113ae565b6001600160a01b0385811660008181526005602052604080822082815560018101839055600290810192909255905490517f23b872dd0000000000000000000000000000000000000000000000000000000081526004810192909252306024830152604482018490529293509116906323b872dd906064016020604051808303816000875af1158015610ecc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef0919061138c565b5050505050565b60006001600160e01b031982167f4e2312e000000000000000000000000000000000000000000000000000000000148061049157507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b0319831614610491565b600060208284031215610f7057600080fd5b81356001600160e01b031981168114610f8857600080fd5b9392505050565b6001600160a01b0381168114610fa457600080fd5b50565b60008083601f840112610fb957600080fd5b50813567ffffffffffffffff811115610fd157600080fd5b602083019150836020828501011115610fe957600080fd5b9250929050565b60008060008060006080868803121561100857600080fd5b853561101381610f8f565b9450602086013561102381610f8f565b935060408601359250606086013567ffffffffffffffff81111561104657600080fd5b61105288828901610fa7565b969995985093965092949392505050565b60006020828403121561107557600080fd5b8135610f8881610f8f565b634e487b7160e01b600052602160045260246000fd5b600281106110b457634e487b7160e01b600052602160045260246000fd5b9052565b608081016110c68287611096565b84602083015283604083015282606083015295945050505050565b6000806000606084860312156110f657600080fd5b8335925060208401359150604084013561110f81610f8f565b809150509250925092565b6000806040838503121561112d57600080fd5b82356003811061113c57600080fd5b9150602083013561114c81610f8f565b809150509250929050565b600060808201905061116a828451611096565b60208301516020830152604083015160408301526060830151606083015292915050565b600080604083850312156111a157600080fd5b82359150602083013561114c81610f8f565b60008083601f8401126111c557600080fd5b50813567ffffffffffffffff8111156111dd57600080fd5b6020830191508360208260051b8501011115610fe957600080fd5b60008060008060008060008060a0898b03121561121457600080fd5b883561121f81610f8f565b9750602089013561122f81610f8f565b9650604089013567ffffffffffffffff8082111561124c57600080fd5b6112588c838d016111b3565b909850965060608b013591508082111561127157600080fd5b61127d8c838d016111b3565b909650945060808b013591508082111561129657600080fd5b506112a38b828c01610fa7565b999c989b5096995094979396929594505050565b60008060008060008060a087890312156112d057600080fd5b86356112db81610f8f565b955060208701356112eb81610f8f565b94506040870135935060608701359250608087013567ffffffffffffffff81111561131557600080fd5b61132189828a01610fa7565b979a9699509497509295939492505050565b60006020828403121561134557600080fd5b8151610f8881610f8f565b634e487b7160e01b600052601160045260246000fd5b8181038181111561049157610491611350565b8082018082111561049157610491611350565b60006020828403121561139e57600080fd5b81518015158114610f8857600080fd5b6000826113cb57634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176104915761049161135056fea264697066735822122009f168ef0b8c4923f34d9fc3531dd251888ba5e05ebbecba2c394b20dff6a1b364736f6c63430008130033";

type BorrowAndStakeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BorrowAndStakeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BorrowAndStake__factory extends ContractFactory {
  constructor(...args: BorrowAndStakeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    RWArealState: string,
    _RWAcar: string,
    drex: string,
    overrides?: Overrides & { from?: string }
  ): Promise<BorrowAndStake> {
    return super.deploy(
      RWArealState,
      _RWAcar,
      drex,
      overrides || {}
    ) as Promise<BorrowAndStake>;
  }
  override getDeployTransaction(
    RWArealState: string,
    _RWAcar: string,
    drex: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      RWArealState,
      _RWAcar,
      drex,
      overrides || {}
    );
  }
  override attach(address: string): BorrowAndStake {
    return super.attach(address) as BorrowAndStake;
  }
  override connect(signer: Signer): BorrowAndStake__factory {
    return super.connect(signer) as BorrowAndStake__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BorrowAndStakeInterface {
    return new utils.Interface(_abi) as BorrowAndStakeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BorrowAndStake {
    return new Contract(address, _abi, signerOrProvider) as BorrowAndStake;
  }
}
