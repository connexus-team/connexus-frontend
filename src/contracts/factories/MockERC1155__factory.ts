/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockERC1155, MockERC1155Interface } from "../MockERC1155";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805160208101909152600081526200002c8162000033565b50620001b6565b6002620000418282620000ea565b5050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200007057607f821691505b6020821081036200009157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620000e557600081815260208120601f850160051c81016020861015620000c05750805b601f850160051c820191505b81811015620000e157828155600101620000cc565b5050505b505050565b81516001600160401b0381111562000106576200010662000045565b6200011e816200011784546200005b565b8462000097565b602080601f8311600181146200015657600084156200013d5750858301515b600019600386901b1c1916600185901b178555620000e1565b600085815260208120601f198616915b82811015620001875788860151825594840194600190910190840162000166565b5085821015620001a65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6116d280620001c66000396000f3fe608060405234801561001057600080fd5b50600436106100a25760003560e01c80632eb2c2d611610076578063a22cb4651161005b578063a22cb46514610158578063e985e9c51461016b578063f242432a146101a757600080fd5b80632eb2c2d6146101255780634e1273f41461013857600080fd5b8062fdd58e146100a757806301ffc9a7146100cd5780630e89341c146100f0578063156e29f614610110575b600080fd5b6100ba6100b5366004610f89565b6101ba565b6040519081526020015b60405180910390f35b6100e06100db366004610fcc565b610266565b60405190151581526020016100c4565b6101036100fe366004610ff0565b610301565b6040516100c4919061104f565b61012361011e366004611062565b610395565b005b6101236101333660046111e1565b6103b5565b61014b61014636600461128b565b610457565b6040516100c49190611391565b6101236101663660046113a4565b610595565b6100e06101793660046113e0565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101236101b5366004611413565b6105a4565b60006001600160a01b03831661023d5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201527f616c6964206f776e65720000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b031982167fd9b67a260000000000000000000000000000000000000000000000000000000014806102c957506001600160e01b031982167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061026057507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b0319831614610260565b60606002805461031090611478565b80601f016020809104026020016040519081016040528092919081815260200182805461033c90611478565b80156103895780601f1061035e57610100808354040283529160200191610389565b820191906000526020600020905b81548152906001019060200180831161036c57829003601f168201915b50505050509050919050565b6103b08383836040518060200160405280600081525061063f565b505050565b6001600160a01b0385163314806103d157506103d18533610179565b6104435760405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201527f6572206f7220617070726f7665640000000000000000000000000000000000006064820152608401610234565b610450858585858561076f565b5050505050565b606081518351146104d05760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610234565b6000835167ffffffffffffffff8111156104ec576104ec611095565b604051908082528060200260200182016040528015610515578160200160208202803683370190505b50905060005b845181101561058d57610560858281518110610539576105396114b2565b6020026020010151858381518110610553576105536114b2565b60200260200101516101ba565b828281518110610572576105726114b2565b6020908102919091010152610586816114de565b905061051b565b509392505050565b6105a03383836109e2565b5050565b6001600160a01b0385163314806105c057506105c08533610179565b6106325760405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201527f6572206f7220617070726f7665640000000000000000000000000000000000006064820152608401610234565b6104508585858585610ad6565b6001600160a01b0384166106bb5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610234565b3360006106c785610c81565b905060006106d485610c81565b90506000868152602081815260408083206001600160a01b038b168452909152812080548792906107069084906114f7565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461076683600089898989610ccc565b50505050505050565b81518351146107e65760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610234565b6001600160a01b03841661084a5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610234565b3360005b845181101561097457600085828151811061086b5761086b6114b2565b602002602001015190506000858381518110610889576108896114b2565b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561091c5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610234565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906109599084906114f7565b925050819055505050508061096d906114de565b905061084e565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516109c492919061150a565b60405180910390a46109da818787878787610e71565b505050505050565b816001600160a01b0316836001600160a01b031603610a695760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610234565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610b3a5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610234565b336000610b4685610c81565b90506000610b5385610c81565b90506000868152602081815260408083206001600160a01b038c16845290915290205485811015610bd95760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610234565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610c169084906114f7565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610c76848a8a8a8a8a610ccc565b505050505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610cbb57610cbb6114b2565b602090810291909101015292915050565b6001600160a01b0384163b156109da5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610d109089908990889088908890600401611538565b6020604051808303816000875af1925050508015610d4b575060408051601f3d908101601f19168201909252610d489181019061157b565b60015b610e0057610d57611598565b806308c379a003610d905750610d6b6115b4565b80610d765750610d92565b8060405162461bcd60e51b8152600401610234919061104f565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610234565b6001600160e01b0319811663f23a6e6160e01b146107665760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610234565b6001600160a01b0384163b156109da5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610eb5908990899088908890889060040161163e565b6020604051808303816000875af1925050508015610ef0575060408051601f3d908101601f19168201909252610eed9181019061157b565b60015b610efc57610d57611598565b6001600160e01b0319811663bc197c8160e01b146107665760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610234565b80356001600160a01b0381168114610f8457600080fd5b919050565b60008060408385031215610f9c57600080fd5b610fa583610f6d565b946020939093013593505050565b6001600160e01b031981168114610fc957600080fd5b50565b600060208284031215610fde57600080fd5b8135610fe981610fb3565b9392505050565b60006020828403121561100257600080fd5b5035919050565b6000815180845260005b8181101561102f57602081850181015186830182015201611013565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610fe96020830184611009565b60008060006060848603121561107757600080fd5b61108084610f6d565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156110d1576110d1611095565b6040525050565b600067ffffffffffffffff8211156110f2576110f2611095565b5060051b60200190565b600082601f83011261110d57600080fd5b8135602061111a826110d8565b60405161112782826110ab565b83815260059390931b850182019282810191508684111561114757600080fd5b8286015b84811015611162578035835291830191830161114b565b509695505050505050565b600082601f83011261117e57600080fd5b813567ffffffffffffffff81111561119857611198611095565b6040516111af601f8301601f1916602001826110ab565b8181528460208386010111156111c457600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156111f957600080fd5b61120286610f6d565b945061121060208701610f6d565b9350604086013567ffffffffffffffff8082111561122d57600080fd5b61123989838a016110fc565b9450606088013591508082111561124f57600080fd5b61125b89838a016110fc565b9350608088013591508082111561127157600080fd5b5061127e8882890161116d565b9150509295509295909350565b6000806040838503121561129e57600080fd5b823567ffffffffffffffff808211156112b657600080fd5b818501915085601f8301126112ca57600080fd5b813560206112d7826110d8565b6040516112e482826110ab565b83815260059390931b850182019282810191508984111561130457600080fd5b948201945b838610156113295761131a86610f6d565b82529482019490820190611309565b9650508601359250508082111561133f57600080fd5b5061134c858286016110fc565b9150509250929050565b600081518084526020808501945080840160005b838110156113865781518752958201959082019060010161136a565b509495945050505050565b602081526000610fe96020830184611356565b600080604083850312156113b757600080fd5b6113c083610f6d565b9150602083013580151581146113d557600080fd5b809150509250929050565b600080604083850312156113f357600080fd5b6113fc83610f6d565b915061140a60208401610f6d565b90509250929050565b600080600080600060a0868803121561142b57600080fd5b61143486610f6d565b945061144260208701610f6d565b93506040860135925060608601359150608086013567ffffffffffffffff81111561146c57600080fd5b61127e8882890161116d565b600181811c9082168061148c57607f821691505b6020821081036114ac57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016114f0576114f06114c8565b5060010190565b80820180821115610260576102606114c8565b60408152600061151d6040830185611356565b828103602084015261152f8185611356565b95945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261157060a0830184611009565b979650505050505050565b60006020828403121561158d57600080fd5b8151610fe981610fb3565b600060033d11156115b15760046000803e5060005160e01c5b90565b600060443d10156115c25790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156115f257505050505090565b828501915081518181111561160a5750505050505090565b843d87010160208285010111156116245750505050505090565b611633602082860101876110ab565b509095945050505050565b60006001600160a01b03808816835280871660208401525060a0604083015261166a60a0830186611356565b828103606084015261167c8186611356565b905082810360808401526116908185611009565b9897505050505050505056fea264697066735822122084473d4d9535bf62d8ad0ee5c60e4ebfa56e795595445c451d8e6e5673f72e9264736f6c63430008130033";

type MockERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC1155__factory extends ContractFactory {
  constructor(...args: MockERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<MockERC1155> {
    return super.deploy(overrides || {}) as Promise<MockERC1155>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockERC1155 {
    return super.attach(address) as MockERC1155;
  }
  override connect(signer: Signer): MockERC1155__factory {
    return super.connect(signer) as MockERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC1155Interface {
    return new utils.Interface(_abi) as MockERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC1155 {
    return new Contract(address, _abi, signerOrProvider) as MockERC1155;
  }
}
