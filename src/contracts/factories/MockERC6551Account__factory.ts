/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockERC6551Account,
  MockERC6551AccountInterface,
} from "../MockERC6551Account";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "val",
        type: "bool",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "isValidSigner",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "salt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610630806100206000396000f3fe60806040526004361061007f5760003560e01c8063bfa0b1331161004e578063bfa0b1331461016b578063c19d93fb1461018e578063d53a822f146101a4578063fc0c546a146101c657600080fd5b806301ffc9a71461008b578063523e3260146100c057806374420f4c146101115780638da5cb5b1461013157600080fd5b3661008657005b600080fd5b34801561009757600080fd5b506100ab6100a63660046103c8565b61020b565b60405190151581526020015b60405180910390f35b3480156100cc57600080fd5b506100e06100db36600461047f565b61024a565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016100b7565b61012461011f3660046104d4565b610285565b6040516100b79190610538565b34801561013d57600080fd5b5061014661024a565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100b7565b34801561017757600080fd5b506101806102bb565b6040519081526020016100b7565b34801561019a57600080fd5b5061018060005481565b3480156101b057600080fd5b506101c46101bf366004610586565b6102ca565b005b3480156101d257600080fd5b506101db610315565b6040805193845273ffffffffffffffffffffffffffffffffffffffff9092166020840152908201526060016100b7565b60007fffffffff00000000000000000000000000000000000000000000000000000000808316900361023f57506000919050565b505060015460ff1690565b60405162461bcd60e51b8152602060048201526008602482015267191a5cd8589b195960c21b60448201526000906064015b60405180910390fd5b60405162461bcd60e51b8152602060048201526008602482015267191a5cd8589b195960c21b604482015260609060640161027c565b60006102c561032d565b905090565b806103025760405162461bcd60e51b8152602060048201526008602482015267191a5cd8589b195960c21b604482015260640161027c565b6001805460ff1916911515919091179055565b6000806000610322610375565b925092509250909192565b6040805160208082528183019092526000918291906020820181803683370190505090506020602d60208301303c8080602001905181019061036f91906105a8565b91505090565b60408051606080825260808201909252600091829182918291906020820181803683370190505090506060604d60208301303c808060200190518101906103bc91906105c1565b93509350935050909192565b6000602082840312156103da57600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461040a57600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461043357600080fd5b50565b60008083601f84011261044857600080fd5b50813567ffffffffffffffff81111561046057600080fd5b60208301915083602082850101111561047857600080fd5b9250929050565b60008060006040848603121561049457600080fd5b833561049f81610411565b9250602084013567ffffffffffffffff8111156104bb57600080fd5b6104c786828701610436565b9497909650939450505050565b6000806000806000608086880312156104ec57600080fd5b85356104f781610411565b945060208601359350604086013567ffffffffffffffff81111561051a57600080fd5b61052688828901610436565b96999598509660600135949350505050565b600060208083528351808285015260005b8181101561056557858101830151858201604001528201610549565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561059857600080fd5b8135801515811461040a57600080fd5b6000602082840312156105ba57600080fd5b5051919050565b6000806000606084860312156105d657600080fd5b8351925060208401516105e881610411565b8092505060408401519050925092509256fea264697066735822122028e6a2e0fd905d20d3420c1be5ed66fbd52022797370876f9137f17b3d606e7f64736f6c63430008130033";

type MockERC6551AccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC6551AccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC6551Account__factory extends ContractFactory {
  constructor(...args: MockERC6551AccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<MockERC6551Account> {
    return super.deploy(overrides || {}) as Promise<MockERC6551Account>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockERC6551Account {
    return super.attach(address) as MockERC6551Account;
  }
  override connect(signer: Signer): MockERC6551Account__factory {
    return super.connect(signer) as MockERC6551Account__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC6551AccountInterface {
    return new utils.Interface(_abi) as MockERC6551AccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC6551Account {
    return new Contract(address, _abi, signerOrProvider) as MockERC6551Account;
  }
}
