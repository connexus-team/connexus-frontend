/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RWACar, RWACarInterface } from "../RWACar";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "RWACar__CallerMustBeManagement",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "numberChassi",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "doclink",
        type: "string",
      },
      {
        internalType: "address",
        name: "accountOrTBA",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "management",
        type: "address",
      },
    ],
    name: "setManagement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405180604001604052806012815260200171292ba0b1b0b92a37b5b2b734bd30ba34b7b760711b81525060405180604001604052806006815260200165292ba0b1b0b960d11b81525081600090816200006d91906200012a565b5060016200007c82826200012a565b505050620001f6565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000b057607f821691505b602082108103620000d157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200012557600081815260208120601f850160051c81016020861015620001005750805b601f850160051c820191505b8181101562000121578281556001016200010c565b5050505b505050565b81516001600160401b0381111562000146576200014662000085565b6200015e816200015784546200009b565b84620000d7565b602080601f8311600181146200019657600084156200017d5750858301515b600019600386901b1c1916600185901b17855562000121565b600085815260208120601f198616915b82811015620001c757888601518255948401946001909101908401620001a6565b5085821015620001e65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61193380620002066000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636820e3c911610097578063b88d4fde11610066578063b88d4fde146101ff578063c87b56dd14610212578063d4a22bde14610225578063e985e9c51461026257600080fd5b80636820e3c9146101b057806370a08231146101c357806395d89b41146101e4578063a22cb465146101ec57600080fd5b8063095ea7b3116100d3578063095ea7b31461016257806323b872dd1461017757806342842e0e1461018a5780636352211e1461019d57600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d610108366004611415565b61029e565b60405190151581526020015b60405180910390f35b61012a6102e2565b6040516101199190611482565b61014a610145366004611495565b610374565b6040516001600160a01b039091168152602001610119565b6101756101703660046114ca565b61039b565b005b6101756101853660046114f4565b6104d1565b6101756101983660046114f4565b610548565b61014a6101ab366004611495565b610563565b6101756101be3660046115bc565b6105c8565b6101d66101d1366004611627565b610620565b604051908152602001610119565b61012a6106ba565b6101756101fa366004611642565b6106c9565b61017561020d36600461167e565b6106d8565b61012a610220366004611495565b610756565b610175610233366004611627565b6007805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b61010d6102703660046116fa565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982167f490649060000000000000000000000000000000000000000000000000000000014806102dc57506102dc82610866565b92915050565b6060600080546102f19061172d565b80601f016020809104026020016040519081016040528092919081815260200182805461031d9061172d565b801561036a5780601f1061033f5761010080835404028352916020019161036a565b820191906000526020600020905b81548152906001019060200180831161034d57829003601f168201915b5050505050905090565b600061037f82610901565b506000908152600460205260409020546001600160a01b031690565b60006103a682610563565b9050806001600160a01b0316836001600160a01b0316036104345760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b336001600160a01b038216148061045057506104508133610270565b6104c25760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161042b565b6104cc8383610968565b505050565b6104db33826109e3565b61053d5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b606482015260840161042b565b6104cc838383610a61565b6104cc838383604051806020016040528060008152506106d8565b6000818152600260205260408120546001600160a01b0316806102dc5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161042b565b6007546001600160a01b0316331461060c576040517f624072a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106168184610c67565b6104cc8383610c81565b60006001600160a01b03821661069e5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e65720000000000000000000000000000000000000000000000606482015260840161042b565b506001600160a01b031660009081526003602052604090205490565b6060600180546102f19061172d565b6106d4338383610d5b565b5050565b6106e233836109e3565b6107445760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b606482015260840161042b565b61075084848484610e29565b50505050565b606061076182610901565b6000828152600660205260408120805461077a9061172d565b80601f01602080910402602001604051908101604052809291908181526020018280546107a69061172d565b80156107f35780601f106107c8576101008083540402835291602001916107f3565b820191906000526020600020905b8154815290600101906020018083116107d657829003601f168201915b50505050509050600061081160408051602081019091526000815290565b90508051600003610823575092915050565b81511561085557808260405160200161083d929190611767565b60405160208183030381529060405292505050919050565b61085e84610ea7565b949350505050565b60006001600160e01b031982167f80ac58cd0000000000000000000000000000000000000000000000000000000014806108c957506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806102dc57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316146102dc565b6000818152600260205260409020546001600160a01b03166109655760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161042b565b50565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03841690811790915581906109aa82610563565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806109ef83610563565b9050806001600160a01b0316846001600160a01b03161480610a3657506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b8061085e5750836001600160a01b0316610a4f84610374565b6001600160a01b031614949350505050565b826001600160a01b0316610a7482610563565b6001600160a01b031614610ad85760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161042b565b6001600160a01b038216610b535760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161042b565b826001600160a01b0316610b6682610563565b6001600160a01b031614610bca5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161042b565b6000818152600460209081526040808320805473ffffffffffffffffffffffffffffffffffffffff199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6106d4828260405180602001604052806000815250610f1b565b6000828152600260205260409020546001600160a01b0316610d0b5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e000000000000000000000000000000000000606482015260840161042b565b6000828152600660205260409020610d2382826117e4565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b816001600160a01b0316836001600160a01b031603610dbc5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161042b565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610e34848484610a61565b610e4084848484610f99565b6107505760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161042b565b6060610eb282610901565b6000610ec960408051602081019091526000815290565b90506000815111610ee95760405180602001604052806000815250610f14565b80610ef3846110e5565b604051602001610f04929190611767565b6040516020818303038152906040525b9392505050565b610f258383611185565b610f326000848484610f99565b6104cc5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161042b565b60006001600160a01b0384163b156110da57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610fdd9033908990889088906004016118a4565b6020604051808303816000875af1925050508015611018575060408051601f3d908101601f19168201909252611015918101906118e0565b60015b6110c0573d808015611046576040519150601f19603f3d011682016040523d82523d6000602084013e61104b565b606091505b5080516000036110b85760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161042b565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061085e565b506001949350505050565b606060006110f28361131d565b600101905060008167ffffffffffffffff81111561111257611112611530565b6040519080825280601f01601f19166020018201604052801561113c576020820181803683370190505b5090508181016020015b600019017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461114657509392505050565b6001600160a01b0382166111db5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161042b565b6000818152600260205260409020546001600160a01b0316156112405760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161042b565b6000818152600260205260409020546001600160a01b0316156112a55760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161042b565b6001600160a01b0382166000818152600360209081526040808320805460010190558483526002909152808220805473ffffffffffffffffffffffffffffffffffffffff19168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611366577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611392576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106113b057662386f26fc10000830492506010015b6305f5e10083106113c8576305f5e100830492506008015b61271083106113dc57612710830492506004015b606483106113ee576064830492506002015b600a83106102dc5760010192915050565b6001600160e01b03198116811461096557600080fd5b60006020828403121561142757600080fd5b8135610f14816113ff565b60005b8381101561144d578181015183820152602001611435565b50506000910152565b6000815180845261146e816020860160208601611432565b601f01601f19169290920160200192915050565b602081526000610f146020830184611456565b6000602082840312156114a757600080fd5b5035919050565b80356001600160a01b03811681146114c557600080fd5b919050565b600080604083850312156114dd57600080fd5b6114e6836114ae565b946020939093013593505050565b60008060006060848603121561150957600080fd5b611512846114ae565b9250611520602085016114ae565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561156157611561611530565b604051601f8501601f19908116603f0116810190828211818310171561158957611589611530565b816040528093508581528686860111156115a257600080fd5b858560208301376000602087830101525050509392505050565b6000806000606084860312156115d157600080fd5b83359250602084013567ffffffffffffffff8111156115ef57600080fd5b8401601f8101861361160057600080fd5b61160f86823560208401611546565b92505061161e604085016114ae565b90509250925092565b60006020828403121561163957600080fd5b610f14826114ae565b6000806040838503121561165557600080fd5b61165e836114ae565b91506020830135801515811461167357600080fd5b809150509250929050565b6000806000806080858703121561169457600080fd5b61169d856114ae565b93506116ab602086016114ae565b925060408501359150606085013567ffffffffffffffff8111156116ce57600080fd5b8501601f810187136116df57600080fd5b6116ee87823560208401611546565b91505092959194509250565b6000806040838503121561170d57600080fd5b611716836114ae565b9150611724602084016114ae565b90509250929050565b600181811c9082168061174157607f821691505b60208210810361176157634e487b7160e01b600052602260045260246000fd5b50919050565b60008351611779818460208801611432565b83519083019061178d818360208801611432565b01949350505050565b601f8211156104cc57600081815260208120601f850160051c810160208610156117bd5750805b601f850160051c820191505b818110156117dc578281556001016117c9565b505050505050565b815167ffffffffffffffff8111156117fe576117fe611530565b6118128161180c845461172d565b84611796565b602080601f831160018114611847576000841561182f5750858301515b600019600386901b1c1916600185901b1785556117dc565b600085815260208120601f198616915b8281101561187657888601518255948401946001909101908401611857565b50858210156118945787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006001600160a01b038087168352808616602084015250836040830152608060608301526118d66080830184611456565b9695505050505050565b6000602082840312156118f257600080fd5b8151610f14816113ff56fea2646970667358221220c6eb6530be994c221f777f74cf8f2525359035aeb393b115da584bf8b0329cf164736f6c63430008130033";

type RWACarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RWACarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RWACar__factory extends ContractFactory {
  constructor(...args: RWACarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<RWACar> {
    return super.deploy(overrides || {}) as Promise<RWACar>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RWACar {
    return super.attach(address) as RWACar;
  }
  override connect(signer: Signer): RWACar__factory {
    return super.connect(signer) as RWACar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RWACarInterface {
    return new utils.Interface(_abi) as RWACarInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): RWACar {
    return new Contract(address, _abi, signerOrProvider) as RWACar;
  }
}
